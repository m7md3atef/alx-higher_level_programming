#!/usr/bin/python3

import time
import math
import sys

def is_prime(num, k=5):
    if num <= 1:
        return False
    if num <= 3:
        return True
    if num % 2 == 0:
        return False

    d = num - 1
    r = 0
    while d % 2 == 0:
        d //= 2
        r += 1

    for _ in range(k):
        a = random.randint(2, num - 1)
        x = pow(a, d, num)
        if x == 1 or x == num - 1:
            continue
        for _ in range(r - 1):
            x = pow(x, 2, num)
            if x == num - 1:
                break

        else:
            return False
    return True

#pollard

def pollards_rho(n):
    def f(x):
        return (x**2 + 1) % n


    x = random.randint(1, n - 1)
    y = x
    d = 1

    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)

    return d

    def gcd(a, b):
        while b:
            a, b = b, a % b
        return a

def main():
    if len(sys.argv) != 2:
        print("Usage: rsa <file>")
        sys.exit(1)

    input_file = sys.argv[1]

    with open(input_file, 'r') as infile:
        num = int(infile.read().strip())
        
    p = pollards_rho(num)
    q = num // p

    if not is_prime(p) or not is_prime(q):
        print("Error: Factors are not prime.")
        sys.exit(1)

    print(f"p = {p}")
    print(f"q = {q}")

if __name__ == "__main__":
    main()
